Vagrant.configure("2") do |config|
	# Definición de las máquinas
	config.vm.define "vm4" do |machine|	# vm4 va a ser el que ejecute los programas de servidor

		hostname = "vm4"
		ip = "192.168.56.14"

		machine.vm.box = "hashicorp/bionic64"
		machine.vm.network "private_network", ip: ip
		machine.vm.hostname = hostname

		machine.vm.provider "virtualbox" do |vb|
			vb.memory = "1024"
			vb.name = "vm4"
	      	end

	      	machine.vm.provision "shell", inline: <<-SHELL
			# Get updated urls/packages sources? & tools
			apt-get update

			# Get several software packages
			apt-get install -y net-tools debconf-utils joe zip libc-dev-bin build-essential default-jdk

			# The alias for ls
			grep -q "alias ls='ls -la'" /home/vagrant/.bashrc || echo -e "\\nalias ls='ls -la'" >> /home/vagrant/.bashrc

			sudo rm -rf /home/pdytr
			git clone https://github.com/lucasquieresopa/PDyTR.git /home/pdytr


			echo "#### Servidor : Escenario 1 en ejecución ####"
			cd /home/pdytr/punto5/escenario-1
			sudo chmod +x servidor1.sh
			./servidor1.sh
			echo "#### Servidor : Escenario 1 ejecutado, servidor arriba ####"

			echo "#### Servidor : Escenario 2 en ejecución ####"
			cd /home/pdytr/punto5/escenario-2
			sudo chmod +x servidor2.sh
			./servidor2.sh
			echo "#### Servidor : Escenario 2 ejecutado, servidor arriba ####"

		SHELL
	end

	config.vm.define "vm5" do |machine| # vm5 va a ser el que ejecute los programas de cliente

		hostname = "vm5"
		ip = "192.168.56.15"

		machine.vm.box = "hashicorp/bionic64"
		machine.vm.network "private_network", ip: ip
		machine.vm.hostname = hostname

		machine.vm.provider "virtualbox" do |vb|
			vb.memory = "1024"
			vb.name = "vm5"
	      	end

	      	machine.vm.provision "shell", inline: <<-SHELL
			# Get updated urls/packages sources? & tools
			apt-get update

			# Get several software packages
			apt-get install -y net-tools debconf-utils joe zip libc-dev-bin build-essential default-jdk

			# The alias for ls
			grep -q "alias ls='ls -la'" /home/vagrant/.bashrc || echo -e "\\nalias ls='ls -la'" >> /home/vagrant/.bashrc

			sudo rm -rf /home/pdytr
			git clone https://github.com/lucasquieresopa/PDyTR.git /home/pdytr

			# Disparar el script para ejecutar los experimentos

			# Punto de sincronizacion
			echo "Esperando a que el servidor (vm4) esté disponible..."

			while true; do
				if ping -c 1 -W 1 192.168.56.14 > /dev/null 2>&1; then
					echo "La máquina responde al ping"
					break   # sale del bucle
				else
					echo "No responde todavía..."
			    		sleep 2
			  	fi
			done
		    	echo "Servidor arriba, ahora ejecuto cliente"

			echo "#### Cliente : Escenario 1 en ejecución ####"
			cd /home/pdytr/punto5/escenario-1
			sudo chmod +x cliente1.sh
			./cliente1.sh
			echo "#### Cliente : Escenario 1 ejecutado, fin de la conexión ####"

			echo "#### Cliente : Escenario 2 en ejecución ####"
			cd /home/pdytr/punto5/escenario-2
			sudo chmod +x cliente2.sh
			./cliente2.sh
			echo "#### Cliente : Escenario 2 ejecutado, fin de la conexión ####"

			echo "#### Cliente : Promedios calculados para el escenario 1 ####"
			cd /home/pdytr/punto5/escenario-1
			sudo gcc -o prom1 prom1.c -lm
			./prom1
			echo "############################################################"

		SHELL
	end
end
