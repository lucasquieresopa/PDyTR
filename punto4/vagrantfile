Vagrant.configure("2") do |config|
	# Variables del repositorio y el path donde se baja
	REPO_URL = ENV.fetch('REPO_URL', 'https://github.com/lucasquieresopa/PDyTR.git')
	REPO_DIR = '/opt/pdytr'

	# Definición de las máquinas
	config.vm.define "vm1" do |machine|	# vm1 va a ser el que ejecute los programas de servidor

		hostname = "vm1"
		ip = "192.168.56.11"

		machine.vm.box = "ubuntu/focal64"
		machine.vm.network "private_network", ip: ip
		machine.vm.hostname = hostname

		machine.vm.provider "virtualbox" do |vb|
			vb.memory = "512"
			vb.name = "vm1"
	      	end

	      	machine.vm.provision "shell", inline: <<-SHELL
			Get updated urls/packages sources? & tools
			apt-get update

			Get several software packages
			apt-get install -y net-tools debconf-utils joe zip libc-dev-bin build-essential default-jdk

			The alias for ls
			grep -q "alias ls='ls -la'" /home/vagrant/.bashrc || echo -e "\\nalias ls='ls -la'" >> /home/vagrant/.bashrc

			Clonar/actualizar el repositorio en /opt/pdytr
			if [ ! -d "#{REPO_DIR}/.git" ]; then
			  git clone "#{REPO_URL}" "#{REPO_DIR}"
			else
			  cd "#{REPO_DIR}" && git pull --ff-only || true
			fi

			# Punto de sincronizacion
			# Disparar el script para ejecutar los experimentos

			sudo chmod +x /opt/pdytr/punto4/servidor.sh
			bash /opt/pdytr/punto4/servidor.sh

			# Permisos de trabajo para el usuario vagrant
			chown -R vagrant:vagrant "#{REPO_DIR}"
		SHELL
	end

	config.vm.define "vm2" do |machine| # vm2 va a ser el que ejecute los programas de cliente

		hostname = "vm2"
		ip = "192.168.56.12"

		machine.vm.box = "ubuntu/focal64"
		machine.vm.network "private_network", ip: ip
		machine.vm.hostname = hostname

		machine.vm.provider "virtualbox" do |vb|
			vb.memory = "512"
			vb.name = "vm2"
	      	end

	      	machine.vm.provision "shell", inline: <<-SHELL
			# Get updated urls/packages sources? & tools
			apt-get update

			# Get several software packages
			apt-get install -y net-tools debconf-utils joe zip libc-dev-bin build-essential default-jdk

			# The alias for ls
			grep -q "alias ls='ls -la'" /home/vagrant/.bashrc || echo -e "\\nalias ls='ls -la'" >> /home/vagrant/.bashrc

			# Clonar/actualizar el repositorio en /opt/pdytr
			if [ ! -d "#{REPO_DIR}/.git" ]; then
			  git clone "#{REPO_URL}" "#{REPO_DIR}"
			else
			  cd "#{REPO_DIR}" && git pull --ff-only || true
			fi

			# Disparar el script para ejecutar los experimentos

			# Punto de sincronizacion
			echo "Esperando a que el servidor (vm1) esté disponible..."

			while true; do
				if ping -c 1 -W 1 192.168.56.11 > /dev/null 2>&1; then
					echo "La máquina responde al ping"
					break   # sale del bucle
				else
					echo "No responde todavía..."
			    		sleep 2
			  	fi
			done

		    	echo "Servidor arriba, ahora ejecuto cliente"

			sudo chmod +x /opt/pdytr/punto4/cliente.sh
			bash /opt/pdytr/punto4/cliente.sh

			# Permisos de trabajo para el usuario vagrant
			chown -R vagrant:vagrant "#{REPO_DIR}"
		SHELL
	end
end